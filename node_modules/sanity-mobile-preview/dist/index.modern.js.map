{"version":3,"file":"index.modern.js","sources":["../src/components/BuildDevice.tsx","../src/devices.ts","../src/components/Dropdown.tsx","../src/components/Button.tsx","../src/components/Menu.tsx","../src/components/MobileDevicePreview.tsx"],"sourcesContent":["import React, {\n  createElement,\n  DetailedReactHTMLElement,\n  useEffect,\n  useState\n} from 'react'\nimport mobileStyle from '../devices.min.css'\nimport {\n  MobileDevice,\n  MobileDeviceColors,\n  MobileDeviceStyleClasses,\n  MobileDeviceStyleNode\n} from '../types'\n\ninterface IProps {\n  selectedDevice: MobileDevice\n  selectedColor: MobileDeviceColors\n  landscape: boolean\n  children: any\n}\n\nexport const BuildDevice: React.FC<IProps> = ({\n  selectedDevice,\n  selectedColor,\n  landscape,\n  children\n}: IProps) => {\n  const [rootDeviceClass, setRootDeviceClass] = useState('')\n\n  useEffect(() => {\n    const colors = selectedDevice.colors\n    const hasColor = colors.includes(selectedColor)\n    const color = hasColor ? selectedColor : 'black'\n\n    let tempRootDeviceClass = `${mobileStyle['marvel-device']}  ${\n      mobileStyle[selectedDevice.type]\n    } ${mobileStyle[color]}`\n\n    if (landscape) tempRootDeviceClass += ' ' + mobileStyle.landscape\n    setRootDeviceClass(tempRootDeviceClass)\n  }, [selectedDevice, selectedColor, landscape])\n\n  return (\n    <div className={rootDeviceClass}>\n      {renderer(selectedDevice.style, children)}\n    </div>\n  )\n}\n\nfunction renderer(\n  mobileDeviceStyleNodes: MobileDeviceStyleNode[],\n  children?: React.FC\n): DetailedReactHTMLElement<any, any>[] {\n  return mobileDeviceStyleNodes.map((style, index) => {\n    return createElement(\n      'div',\n      {\n        className: Array.isArray(style.className)\n          ? convertClassNameArrayToClassName(style.className)\n          : mobileStyle[style.className],\n        key: 'mobileStyle' + index\n      },\n      style.className === 'screen'\n        ? children\n        : style.children && renderer(style.children, children)\n    )\n  })\n}\n\nconst convertClassNameArrayToClassName = (\n  classNameArray: MobileDeviceStyleClasses[]\n) => {\n  let res = ''\n  for (const style of classNameArray) {\n    res += `${mobileStyle[style]} `\n  }\n  return res\n}\n","import { MobileDevice } from './types'\n\nexport const devices: { [id: string]: MobileDevice } = {\n  'iphone-x': {\n    type: 'iphone-x',\n    readableName: 'iPhone X',\n    colors: ['black'],\n    style: [\n      {\n        className: 'notch',\n        children: [{ className: 'camera' }, { className: 'speaker' }]\n      },\n      { className: 'top-bar' },\n      { className: 'sleep' },\n      { className: 'bottom-bar' },\n      { className: 'volume' },\n      {\n        className: 'overflow',\n        children: [\n          { className: ['shadow', 'shadow--tr'] },\n          { className: ['shadow', 'shadow--tl'] },\n          { className: ['shadow', 'shadow--br'] },\n          { className: ['shadow', 'shadow--bl'] }\n        ]\n      },\n      { className: 'inner-shadow' },\n      { className: 'screen' }\n    ]\n  },\n  note8: {\n    type: 'note8',\n    readableName: 'Note 8',\n    colors: ['black'],\n    style: [\n      { className: 'inner' },\n      { className: 'overflow', children: [{ className: 'shadow' }] },\n      { className: 'speaker' },\n      { className: 'sensors' },\n      { className: 'more-sensors' },\n      { className: 'sleep' },\n      { className: 'volume' },\n      { className: 'camera' },\n      { className: 'screen' }\n    ]\n  },\n  iphone8: {\n    type: 'iphone8',\n    readableName: 'iPhone 8',\n    colors: ['black', 'silver', 'gold'],\n    style: [\n      { className: 'top-bar' },\n      { className: 'sleep' },\n      { className: 'volume' },\n      { className: 'camera' },\n      { className: 'sensor' },\n      { className: 'speaker' },\n      { className: 'screen' },\n      { className: 'home' },\n      { className: 'bottom-bar' }\n    ]\n  },\n  iphone8plus: {\n    type: 'iphone8plus',\n    readableName: 'iPhone 8 plus',\n    colors: ['black', 'silver', 'gold'],\n    style: [\n      { className: 'top-bar' },\n      { className: 'sleep' },\n      { className: 'volume' },\n      { className: 'camera' },\n      { className: 'sensor' },\n      { className: 'speaker' },\n      { className: 'screen' },\n      { className: 'home' },\n      { className: 'bottom-bar' }\n    ]\n  },\n  iphone5s: {\n    type: 'iphone5s',\n    readableName: 'iPhone 5s',\n    colors: ['black', 'silver', 'gold'],\n    style: [\n      { className: 'top-bar' },\n      { className: 'sleep' },\n      { className: 'volume' },\n      { className: 'camera' },\n      { className: 'sensor' },\n      { className: 'speaker' },\n      { className: 'screen' },\n      { className: 'home' },\n      { className: 'bottom-bar' }\n    ]\n  },\n  ipad: {\n    type: 'ipad',\n    readableName: 'iPad mini',\n    colors: ['black', 'silver'],\n    style: [\n      { className: 'camera' },\n      { className: 'screen' },\n      { className: 'home' },\n      { className: 'bottom-bar' }\n    ]\n  },\n  nexus5: {\n    type: 'nexus5',\n    readableName: 'Nexus 5',\n    colors: ['black'],\n    style: [\n      { className: 'top-bar' },\n      { className: 'sleep' },\n      { className: 'volume' },\n      { className: 'camera' },\n      { className: 'screen' }\n    ]\n  }\n}\n","import React, { useState } from 'react'\nimport dropdownStyles from './Dropdown.css'\n\nexport interface IDropdown {\n  selectedItem: string\n  availableItems: { type: string; readableName: string }[]\n  updateSelectedItem: (selectedElement: string) => void\n}\n\nexport const Dropdown: React.FC<IDropdown> = ({\n  selectedItem,\n  availableItems,\n  updateSelectedItem\n}: IDropdown) => {\n  const [dropdown, setDropdown] = useState(false)\n\n  return (\n    <div className={dropdownStyles.dropdown} style={{ width: '200px' }} onFocus={() => setDropdown(false)}>\n      <div\n        className={dropdownStyles.button}\n        onClick={() => setDropdown(!dropdown)}\n      >\n        {selectedItem}\n      </div>\n\n      {dropdown ? (\n        <ul>\n          {availableItems.map((item, index) => {\n            return (\n              <li\n                onClick={() => {\n                  updateSelectedItem(item.type)\n                  setDropdown(!dropdown)\n                }}\n                key={item.type + index}\n              >\n                {item.readableName}\n              </li>\n            )\n          })}\n        </ul>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport styles from './Button.css'\n\ninterface IButtonProps {\n  landscape: boolean\n  updateLandscape: (value: boolean) => void\n  label: string\n}\n\nexport const Button: React.FC<IButtonProps> = ({\n  landscape,\n  updateLandscape,\n  label\n}: IButtonProps) => {\n  return (\n    <div className={styles.button}>\n      <button onClick={() => updateLandscape(!landscape)}>{label}</button>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { devices } from '../devices'\nimport { MobileDevice, MobileDeviceColors, MobileDevices } from '../types'\nimport { Dropdown } from './Dropdown'\nimport {Button} from \"./Button\";\n\ninterface IMenuProps {\n  selectedDevice: MobileDevice\n  allowedDevices?: MobileDevices[]\n  selectedColor: MobileDeviceColors\n  landscape: boolean\n  updateSelectedDevice: (\n    device: MobileDevice,\n    color: MobileDeviceColors\n  ) => void\n  updateLandscape: (value: boolean) => void\n}\n\nconst capitalizeString = (stringToCapitalize: string) => {\n  let res = ''\n  if (stringToCapitalize.length > 0)\n    res += stringToCapitalize.charAt(0).toUpperCase()\n  if (stringToCapitalize.length > 1) res += stringToCapitalize.slice(1)\n  return res\n}\n\nexport const Menu: React.FC<IMenuProps> = ({\n  selectedDevice,\n  allowedDevices,\n  landscape,\n  updateSelectedDevice,\n  updateLandscape,\n  selectedColor\n}: IMenuProps) => {\n  const [color, setColor] = useState(selectedColor)\n  const [device, setDevice] = useState(selectedDevice)\n  const [availableColors, setAvailableColors] = useState(selectedDevice.colors)\n\n  const updateColor = (color: MobileDeviceColors) => {\n    setColor(color)\n    updateSelectedDevice(device, color)\n  }\n\n  const updateDevice = (deviceType: MobileDevices) => {\n    const device = devices[deviceType]\n    setDevice(device)\n    setAvailableColors(device.colors)\n    if (!device.colors.includes(color)) setColor('black')\n    updateSelectedDevice(device, color)\n  }\n\n  const allDevices: MobileDevices[] = [\n    'iphone-x',\n    'note8',\n    'iphone8',\n    'iphone8plus',\n    'iphone5s',\n    'ipad',\n    'nexus5'\n  ]\n\n  const readableDevices = (allowedDevices || allDevices).map((device) => {\n    const tempDevice = devices[device]\n    return {\n      type: tempDevice.type,\n      readableName: tempDevice.readableName\n    }\n  })\n\n  const readableColors = availableColors.map((color) => {\n    return {\n      type: color,\n      readableName: capitalizeString(color)\n    }\n  })\n\n  return (\n    <div style={{ display: 'flex', justifyItems: 'center', alignItems: 'center' }}>\n      <Dropdown\n        selectedItem={device.readableName}\n        availableItems={readableDevices}\n        updateSelectedItem={updateDevice}\n      />\n      {availableColors && (\n        <Dropdown\n          selectedItem={capitalizeString(color)}\n          availableItems={readableColors}\n          updateSelectedItem={updateColor}\n        />\n      )}\n      <Button\n        landscape={landscape}\n        updateLandscape={updateLandscape}\n        label='Rotate'\n      />\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { MobileDevice, MobileDeviceColors, MobileDevices } from '../types'\nimport { BuildDevice } from './BuildDevice'\nimport { Menu } from './Menu'\nimport { devices } from '../devices'\n\nexport interface IMobileDeviceProps {\n  allowedDevices?: MobileDevices[]\n  preSelectedDevice?: MobileDevices\n  preSelectedColor?: MobileDeviceColors\n  preSelectedLandscape?: boolean\n  showMenu?: boolean\n  children?: any\n}\n\nexport const MobileDevicePreview: React.FC<IMobileDeviceProps> = ({\n  allowedDevices,\n  preSelectedDevice,\n  preSelectedColor = 'black',\n  showMenu = true,\n  preSelectedLandscape = false,\n  children\n}: IMobileDeviceProps) => {\n  const [selectedDevice, setSelectedDevice] = useState<MobileDevice>()\n  const [selectedColor, setSelectedColor] = useState<MobileDeviceColors>(\n    'black'\n  )\n  const [landscape, setLandscape] = useState(preSelectedLandscape)\n\n  useEffect(() => {\n    setPreselectedDevice()\n  }, [])\n\n  const setPreselectedDevice = () => {\n    let device: MobileDevice\n    if (preSelectedDevice && allowedDevices && allowedDevices.length > 0) {\n      device = checkPreSelectedDeviceAndAllowedDevices(\n        preSelectedDevice,\n        allowedDevices\n      )\n    } else if (preSelectedDevice) {\n      device = devices[preSelectedDevice]\n    } else if (allowedDevices && allowedDevices.length > 0) {\n      device = devices[allowedDevices[0]]\n    } else {\n      device = devices['iphone-x']\n    }\n    setPreselectedColorForDevice(device)\n    setSelectedDevice(device || devices['iphone-x'])\n  }\n\n  const checkPreSelectedDeviceAndAllowedDevices = (\n    device: MobileDevices,\n    possibleDevices: MobileDevices[]\n  ) => {\n    if (device && possibleDevices.includes(device)) {\n      return devices[device]\n    } else {\n      console.error(\n        'The preselected device was not included in the allowedDevices. Defaulting to the first allowed device'\n      )\n      return devices[possibleDevices[0]]\n    }\n  }\n\n  const setPreselectedColorForDevice = (device: MobileDevice) => {\n    if (preSelectedColor && !device.colors.includes(preSelectedColor)) {\n      console.error(\n        `Color ${preSelectedColor} can't be chosen for device ${device.readableName}`\n      )\n      setSelectedColor('black')\n    } else if (preSelectedColor && device.colors.includes(preSelectedColor)) {\n      setSelectedColor(preSelectedColor)\n    } else {\n      setSelectedColor('black')\n    }\n  }\n\n  const updateSelectedDevice = (\n    updatedDevice: MobileDevice,\n    updatedColor: MobileDeviceColors\n  ) => {\n    setSelectedDevice(updatedDevice)\n    setSelectedColor(updatedColor)\n  }\n\n  return selectedDevice ? (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minWidth: 'min-content'\n      }}\n    >\n      {showMenu && (\n        <Menu\n          selectedDevice={selectedDevice}\n          selectedColor={selectedColor}\n          allowedDevices={allowedDevices}\n          landscape={landscape}\n          updateLandscape={setLandscape}\n          updateSelectedDevice={updateSelectedDevice}\n        />\n      )}\n      <BuildDevice\n        selectedDevice={selectedDevice}\n        selectedColor={selectedColor}\n        landscape={landscape}\n      >\n        {children}\n      </BuildDevice>\n    </div>\n  ) : (\n    <div>Something strange happened</div>\n  )\n}\n"],"names":["BuildDevice","selectedDevice","selectedColor","landscape","children","useState","rootDeviceClass","setRootDeviceClass","useEffect","colors","hasColor","includes","color","tempRootDeviceClass","mobileStyle","type","React","className","renderer","style","mobileDeviceStyleNodes","map","index","createElement","Array","isArray","convertClassNameArrayToClassName","key","classNameArray","res","devices","readableName","note8","iphone8","iphone8plus","iphone5s","ipad","nexus5","Dropdown","selectedItem","availableItems","updateSelectedItem","dropdown","setDropdown","dropdownStyles","width","onFocus","button","onClick","item","Button","updateLandscape","label","styles","capitalizeString","stringToCapitalize","length","charAt","toUpperCase","slice","Menu","allowedDevices","updateSelectedDevice","setColor","device","setDevice","availableColors","setAvailableColors","updateColor","updateDevice","deviceType","allDevices","readableDevices","tempDevice","readableColors","display","justifyItems","alignItems","MobileDevicePreview","preSelectedDevice","preSelectedColor","showMenu","preSelectedLandscape","setSelectedDevice","setSelectedColor","setLandscape","setPreselectedDevice","checkPreSelectedDeviceAndAllowedDevices","setPreselectedColorForDevice","possibleDevices","console","error","updatedDevice","updatedColor","flexDirection","justifyContent","minWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBO,IAAMA,WAAW,GAAqB,SAAhCA,WAAgC;MAC3CC,sBAAAA;MACAC,qBAAAA;MACAC,iBAAAA;MACAC,gBAAAA;;kBAE8CC,QAAQ,CAAC,EAAD;MAA/CC;MAAiBC;;AAExBC,EAAAA,SAAS,CAAC;AACR,QAAMC,MAAM,GAAGR,cAAc,CAACQ,MAA9B;AACA,QAAMC,QAAQ,GAAGD,MAAM,CAACE,QAAP,CAAgBT,aAAhB,CAAjB;AACA,QAAMU,KAAK,GAAGF,QAAQ,GAAGR,aAAH,GAAmB,OAAzC;AAEA,QAAIW,mBAAmB,GAAMC,WAAW,CAAC,eAAD,CAAjB,UACrBA,WAAW,CAACb,cAAc,CAACc,IAAhB,CADU,SAEnBD,WAAW,CAACF,KAAD,CAFf;AAIA,QAAIT,SAAJ,EAAeU,mBAAmB,IAAI,MAAMC,WAAW,CAACX,SAAzC;AACfI,IAAAA,kBAAkB,CAACM,mBAAD,CAAlB;AACD,GAXQ,EAWN,CAACZ,cAAD,EAAiBC,aAAjB,EAAgCC,SAAhC,CAXM,CAAT;AAaA,SACEa,mBAAA,MAAA;AAAKC,IAAAA,SAAS,EAAEX;GAAhB,EACGY,QAAQ,CAACjB,cAAc,CAACkB,KAAhB,EAAuBf,QAAvB,CADX,CADF;AAKD,CA1BM;;AA4BP,SAASc,QAAT,CACEE,sBADF,EAEEhB,QAFF;AAIE,SAAOgB,sBAAsB,CAACC,GAAvB,CAA2B,UAACF,KAAD,EAAQG,KAAR;AAChC,WAAOC,aAAa,CAClB,KADkB,EAElB;AACEN,MAAAA,SAAS,EAAEO,KAAK,CAACC,OAAN,CAAcN,KAAK,CAACF,SAApB,IACPS,gCAAgC,CAACP,KAAK,CAACF,SAAP,CADzB,GAEPH,WAAW,CAACK,KAAK,CAACF,SAAP,CAHjB;AAIEU,MAAAA,GAAG,EAAE,gBAAgBL;AAJvB,KAFkB,EAQlBH,KAAK,CAACF,SAAN,KAAoB,QAApB,GACIb,QADJ,GAEIe,KAAK,CAACf,QAAN,IAAkBc,QAAQ,CAACC,KAAK,CAACf,QAAP,EAAiBA,QAAjB,CAVZ,CAApB;AAYD,GAbM,CAAP;AAcD;;AAED,IAAMsB,gCAAgC,GAAG,SAAnCA,gCAAmC,CACvCE,cADuC;AAGvC,MAAIC,GAAG,GAAG,EAAV;;AACA,uDAAoBD,cAApB,wCAAoC;AAAA,QAAzBT,KAAyB;AAClCU,IAAAA,GAAG,IAAOf,WAAW,CAACK,KAAD,CAAlB,MAAH;AACD;;AACD,SAAOU,GAAP;AACD,CARD;;ACnEO,IAAMC,OAAO,GAAmC;AACrD,cAAY;AACVf,IAAAA,IAAI,EAAE,UADI;AAEVgB,IAAAA,YAAY,EAAE,UAFJ;AAGVtB,IAAAA,MAAM,EAAE,CAAC,OAAD,CAHE;AAIVU,IAAAA,KAAK,EAAE,CACL;AACEF,MAAAA,SAAS,EAAE,OADb;AAEEb,MAAAA,QAAQ,EAAE,CAAC;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAAD,EAA0B;AAAEA,QAAAA,SAAS,EAAE;AAAb,OAA1B;AAFZ,KADK,EAKL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KALK,EAML;AAAEA,MAAAA,SAAS,EAAE;AAAb,KANK,EAOL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAPK,EAQL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KARK,EASL;AACEA,MAAAA,SAAS,EAAE,UADb;AAEEb,MAAAA,QAAQ,EAAE,CACR;AAAEa,QAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,YAAX;AAAb,OADQ,EAER;AAAEA,QAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,YAAX;AAAb,OAFQ,EAGR;AAAEA,QAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,YAAX;AAAb,OAHQ,EAIR;AAAEA,QAAAA,SAAS,EAAE,CAAC,QAAD,EAAW,YAAX;AAAb,OAJQ;AAFZ,KATK,EAkBL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAlBK,EAmBL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAnBK;AAJG,GADyC;AA2BrDe,EAAAA,KAAK,EAAE;AACLjB,IAAAA,IAAI,EAAE,OADD;AAELgB,IAAAA,YAAY,EAAE,QAFT;AAGLtB,IAAAA,MAAM,EAAE,CAAC,OAAD,CAHH;AAILU,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,SAAS,EAAE;AAAb,KADK,EAEL;AAAEA,MAAAA,SAAS,EAAE,UAAb;AAAyBb,MAAAA,QAAQ,EAAE,CAAC;AAAEa,QAAAA,SAAS,EAAE;AAAb,OAAD;AAAnC,KAFK,EAGL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHK,EAIL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAJK,EAKL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KALK,EAML;AAAEA,MAAAA,SAAS,EAAE;AAAb,KANK,EAOL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAPK,EAQL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KARK,EASL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KATK;AAJF,GA3B8C;AA2CrDgB,EAAAA,OAAO,EAAE;AACPlB,IAAAA,IAAI,EAAE,SADC;AAEPgB,IAAAA,YAAY,EAAE,UAFP;AAGPtB,IAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAHD;AAIPU,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,SAAS,EAAE;AAAb,KADK,EAEL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAFK,EAGL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHK,EAIL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAJK,EAKL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KALK,EAML;AAAEA,MAAAA,SAAS,EAAE;AAAb,KANK,EAOL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAPK,EAQL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KARK,EASL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KATK;AAJA,GA3C4C;AA2DrDiB,EAAAA,WAAW,EAAE;AACXnB,IAAAA,IAAI,EAAE,aADK;AAEXgB,IAAAA,YAAY,EAAE,eAFH;AAGXtB,IAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAHG;AAIXU,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,SAAS,EAAE;AAAb,KADK,EAEL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAFK,EAGL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHK,EAIL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAJK,EAKL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KALK,EAML;AAAEA,MAAAA,SAAS,EAAE;AAAb,KANK,EAOL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAPK,EAQL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KARK,EASL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KATK;AAJI,GA3DwC;AA2ErDkB,EAAAA,QAAQ,EAAE;AACRpB,IAAAA,IAAI,EAAE,UADE;AAERgB,IAAAA,YAAY,EAAE,WAFN;AAGRtB,IAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAHA;AAIRU,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,SAAS,EAAE;AAAb,KADK,EAEL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAFK,EAGL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHK,EAIL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAJK,EAKL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KALK,EAML;AAAEA,MAAAA,SAAS,EAAE;AAAb,KANK,EAOL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAPK,EAQL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KARK,EASL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KATK;AAJC,GA3E2C;AA2FrDmB,EAAAA,IAAI,EAAE;AACJrB,IAAAA,IAAI,EAAE,MADF;AAEJgB,IAAAA,YAAY,EAAE,WAFV;AAGJtB,IAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,CAHJ;AAIJU,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,SAAS,EAAE;AAAb,KADK,EAEL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAFK,EAGL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHK,EAIL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAJK;AAJH,GA3F+C;AAsGrDoB,EAAAA,MAAM,EAAE;AACNtB,IAAAA,IAAI,EAAE,QADA;AAENgB,IAAAA,YAAY,EAAE,SAFR;AAGNtB,IAAAA,MAAM,EAAE,CAAC,OAAD,CAHF;AAINU,IAAAA,KAAK,EAAE,CACL;AAAEF,MAAAA,SAAS,EAAE;AAAb,KADK,EAEL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAFK,EAGL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAHK,EAIL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KAJK,EAKL;AAAEA,MAAAA,SAAS,EAAE;AAAb,KALK;AAJD;AAtG6C,CAAhD;;;;ACOA,IAAMqB,QAAQ,GAAwB,SAAhCA,QAAgC;MAC3CC,oBAAAA;MACAC,sBAAAA;MACAC,0BAAAA;;kBAEgCpC,QAAQ,CAAC,KAAD;MAAjCqC;MAAUC;;AAEjB,SACE3B,mBAAA,MAAA;AAAKC,IAAAA,SAAS,EAAE2B,cAAc,CAACF;AAAUvB,IAAAA,KAAK,EAAE;AAAE0B,MAAAA,KAAK,EAAE;AAAT;AAAoBC,IAAAA,OAAO,EAAE;AAAA,aAAMH,WAAW,CAAC,KAAD,CAAjB;AAAA;GAA7E,EACE3B,mBAAA,MAAA;AACEC,IAAAA,SAAS,EAAE2B,cAAc,CAACG;AAC1BC,IAAAA,OAAO,EAAE;AAAA,aAAML,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA;GAFX,EAIGH,YAJH,CADF,EAQGG,QAAQ,GACP1B,mBAAA,KAAA,MAAA,EACGwB,cAAc,CAACnB,GAAf,CAAmB,UAAC4B,IAAD,EAAO3B,KAAP;AAClB,WACEN,mBAAA,KAAA;AACEgC,MAAAA,OAAO,EAAE;AACPP,QAAAA,kBAAkB,CAACQ,IAAI,CAAClC,IAAN,CAAlB;AACA4B,QAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;AACDf,MAAAA,GAAG,EAAEsB,IAAI,CAAClC,IAAL,GAAYO;KALnB,EAOG2B,IAAI,CAAClB,YAPR,CADF;AAWD,GAZA,CADH,CADO,GAgBL,IAxBN,CADF;AA4BD,CAnCM;;;;ACAA,IAAMmB,MAAM,GAA2B,SAAjCA,MAAiC;MAC5C/C,iBAAAA;MACAgD,uBAAAA;MACAC,aAAAA;AAEA,SACEpC,mBAAA,MAAA;AAAKC,IAAAA,SAAS,EAAEoC,MAAM,CAACN;GAAvB,EACE/B,mBAAA,SAAA;AAAQgC,IAAAA,OAAO,EAAE;AAAA,aAAMG,eAAe,CAAC,CAAChD,SAAF,CAArB;AAAA;GAAjB,EAAqDiD,KAArD,CADF,CADF;AAKD,CAVM;;ACSP,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,kBAAD;AACvB,MAAI1B,GAAG,GAAG,EAAV;AACA,MAAI0B,kBAAkB,CAACC,MAAnB,GAA4B,CAAhC,EACE3B,GAAG,IAAI0B,kBAAkB,CAACE,MAAnB,CAA0B,CAA1B,EAA6BC,WAA7B,EAAP;AACF,MAAIH,kBAAkB,CAACC,MAAnB,GAA4B,CAAhC,EAAmC3B,GAAG,IAAI0B,kBAAkB,CAACI,KAAnB,CAAyB,CAAzB,CAAP;AACnC,SAAO9B,GAAP;AACD,CAND;;AAQA,AAAO,IAAM+B,IAAI,GAAyB,SAA7BA,IAA6B;MACxC3D,sBAAAA;MACA4D,sBAAAA;MACA1D,iBAAAA;MACA2D,4BAAAA;MACAX,uBAAAA;MACAjD,qBAAAA;;kBAE0BG,QAAQ,CAACH,aAAD;MAA3BU;MAAOmD;;mBACc1D,QAAQ,CAACJ,cAAD;MAA7B+D;MAAQC;;mBAC+B5D,QAAQ,CAACJ,cAAc,CAACQ,MAAhB;MAA/CyD;MAAiBC;;AAExB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACxD,KAAD;AAClBmD,IAAAA,QAAQ,CAACnD,KAAD,CAAR;AACAkD,IAAAA,oBAAoB,CAACE,MAAD,EAASpD,KAAT,CAApB;AACD,GAHD;;AAKA,MAAMyD,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD;AACnB,QAAMN,MAAM,GAAGlC,OAAO,CAACwC,UAAD,CAAtB;AACAL,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAG,IAAAA,kBAAkB,CAACH,MAAM,CAACvD,MAAR,CAAlB;AACA,QAAI,CAACuD,MAAM,CAACvD,MAAP,CAAcE,QAAd,CAAuBC,KAAvB,CAAL,EAAoCmD,QAAQ,CAAC,OAAD,CAAR;AACpCD,IAAAA,oBAAoB,CAACE,MAAD,EAASpD,KAAT,CAApB;AACD,GAND;;AAQA,MAAM2D,UAAU,GAAoB,CAClC,UADkC,EAElC,OAFkC,EAGlC,SAHkC,EAIlC,aAJkC,EAKlC,UALkC,EAMlC,MANkC,EAOlC,QAPkC,CAApC;AAUA,MAAMC,eAAe,GAAG,CAACX,cAAc,IAAIU,UAAnB,EAA+BlD,GAA/B,CAAmC,UAAC2C,MAAD;AACzD,QAAMS,UAAU,GAAG3C,OAAO,CAACkC,MAAD,CAA1B;AACA,WAAO;AACLjD,MAAAA,IAAI,EAAE0D,UAAU,CAAC1D,IADZ;AAELgB,MAAAA,YAAY,EAAE0C,UAAU,CAAC1C;AAFpB,KAAP;AAID,GANuB,CAAxB;AAQA,MAAM2C,cAAc,GAAGR,eAAe,CAAC7C,GAAhB,CAAoB,UAACT,KAAD;AACzC,WAAO;AACLG,MAAAA,IAAI,EAAEH,KADD;AAELmB,MAAAA,YAAY,EAAEuB,gBAAgB,CAAC1C,KAAD;AAFzB,KAAP;AAID,GALsB,CAAvB;AAOA,SACEI,mBAAA,MAAA;AAAKG,IAAAA,KAAK,EAAE;AAAEwD,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,YAAY,EAAE,QAAjC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD;GAAZ,EACE7D,mBAAA,CAACsB,QAAD;AACEC,IAAAA,YAAY,EAAEyB,MAAM,CAACjC;AACrBS,IAAAA,cAAc,EAAEgC;AAChB/B,IAAAA,kBAAkB,EAAE4B;GAHtB,CADF,EAMGH,eAAe,IACdlD,mBAAA,CAACsB,QAAD;AACEC,IAAAA,YAAY,EAAEe,gBAAgB,CAAC1C,KAAD;AAC9B4B,IAAAA,cAAc,EAAEkC;AAChBjC,IAAAA,kBAAkB,EAAE2B;GAHtB,CAPJ,EAaEpD,mBAAA,CAACkC,MAAD;AACE/C,IAAAA,SAAS,EAAEA;AACXgD,IAAAA,eAAe,EAAEA;AACjBC,IAAAA,KAAK,EAAC;GAHR,CAbF,CADF;AAqBD,CAvEM;;ACXA,IAAM0B,mBAAmB,GAAiC,SAApDA,mBAAoD;MAC/DjB,sBAAAA;MACAkB,yBAAAA;mCACAC;MAAAA,sDAAmB;2BACnBC;MAAAA,sCAAW;mCACXC;MAAAA,0DAAuB;MACvB9E,gBAAAA;;kBAE4CC,QAAQ;MAA7CJ;MAAgBkF;;mBACmB9E,QAAQ,CAChD,OADgD;MAA3CH;MAAekF;;mBAGY/E,QAAQ,CAAC6E,oBAAD;MAAnC/E;MAAWkF;;AAElB7E,EAAAA,SAAS,CAAC;AACR8E,IAAAA,oBAAoB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB;AAC3B,QAAItB,MAAJ;;AACA,QAAIe,iBAAiB,IAAIlB,cAArB,IAAuCA,cAAc,CAACL,MAAf,GAAwB,CAAnE,EAAsE;AACpEQ,MAAAA,MAAM,GAAGuB,uCAAuC,CAC9CR,iBAD8C,EAE9ClB,cAF8C,CAAhD;AAID,KALD,MAKO,IAAIkB,iBAAJ,EAAuB;AAC5Bf,MAAAA,MAAM,GAAGlC,OAAO,CAACiD,iBAAD,CAAhB;AACD,KAFM,MAEA,IAAIlB,cAAc,IAAIA,cAAc,CAACL,MAAf,GAAwB,CAA9C,EAAiD;AACtDQ,MAAAA,MAAM,GAAGlC,OAAO,CAAC+B,cAAc,CAAC,CAAD,CAAf,CAAhB;AACD,KAFM,MAEA;AACLG,MAAAA,MAAM,GAAGlC,OAAO,CAAC,UAAD,CAAhB;AACD;;AACD0D,IAAAA,4BAA4B,CAACxB,MAAD,CAA5B;AACAmB,IAAAA,iBAAiB,CAACnB,MAAM,IAAIlC,OAAO,CAAC,UAAD,CAAlB,CAAjB;AACD,GAhBD;;AAkBA,MAAMyD,uCAAuC,GAAG,SAA1CA,uCAA0C,CAC9CvB,MAD8C,EAE9CyB,eAF8C;AAI9C,QAAIzB,MAAM,IAAIyB,eAAe,CAAC9E,QAAhB,CAAyBqD,MAAzB,CAAd,EAAgD;AAC9C,aAAOlC,OAAO,CAACkC,MAAD,CAAd;AACD,KAFD,MAEO;AACL0B,MAAAA,OAAO,CAACC,KAAR,CACE,uGADF;AAGA,aAAO7D,OAAO,CAAC2D,eAAe,CAAC,CAAD,CAAhB,CAAd;AACD;AACF,GAZD;;AAcA,MAAMD,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACxB,MAAD;AACnC,QAAIgB,gBAAgB,IAAI,CAAChB,MAAM,CAACvD,MAAP,CAAcE,QAAd,CAAuBqE,gBAAvB,CAAzB,EAAmE;AACjEU,MAAAA,OAAO,CAACC,KAAR,YACWX,gBADX,oCAC0DhB,MAAM,CAACjC,YADjE;AAGAqD,MAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD,KALD,MAKO,IAAIJ,gBAAgB,IAAIhB,MAAM,CAACvD,MAAP,CAAcE,QAAd,CAAuBqE,gBAAvB,CAAxB,EAAkE;AACvEI,MAAAA,gBAAgB,CAACJ,gBAAD,CAAhB;AACD,KAFM,MAEA;AACLI,MAAAA,gBAAgB,CAAC,OAAD,CAAhB;AACD;AACF,GAXD;;AAaA,MAAMtB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3B8B,aAD2B,EAE3BC,YAF2B;AAI3BV,IAAAA,iBAAiB,CAACS,aAAD,CAAjB;AACAR,IAAAA,gBAAgB,CAACS,YAAD,CAAhB;AACD,GAND;;AAQA,SAAO5F,cAAc,GACnBe,mBAAA,MAAA;AACEG,IAAAA,KAAK,EAAE;AACLwD,MAAAA,OAAO,EAAE,MADJ;AAELmB,MAAAA,aAAa,EAAE,QAFV;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILlB,MAAAA,UAAU,EAAE,QAJP;AAKLmB,MAAAA,QAAQ,EAAE;AALL;GADT,EASGf,QAAQ,IACPjE,mBAAA,CAAC4C,IAAD;AACE3D,IAAAA,cAAc,EAAEA;AAChBC,IAAAA,aAAa,EAAEA;AACf2D,IAAAA,cAAc,EAAEA;AAChB1D,IAAAA,SAAS,EAAEA;AACXgD,IAAAA,eAAe,EAAEkC;AACjBvB,IAAAA,oBAAoB,EAAEA;GANxB,CAVJ,EAmBE9C,mBAAA,CAAChB,WAAD;AACEC,IAAAA,cAAc,EAAEA;AAChBC,IAAAA,aAAa,EAAEA;AACfC,IAAAA,SAAS,EAAEA;GAHb,EAKGC,QALH,CAnBF,CADmB,GA6BnBY,mBAAA,MAAA,MAAA,8BAAA,CA7BF;AA+BD,CAtGM;;;;"}
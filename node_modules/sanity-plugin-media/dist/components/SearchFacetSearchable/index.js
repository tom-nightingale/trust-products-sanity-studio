"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var icons_1 = require("@sanity/icons");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var react_select_1 = __importDefault(require("react-select"));
var constants_1 = require("../../constants");
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var assets_1 = require("../../modules/assets");
var single_1 = require("../../styled/react-select/single");
var SearchFacet_1 = __importDefault(require("../SearchFacet"));
var SearchFacetSearchable = function (props) {
    var facet = props.facet;
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var tagIds = useTypedSelector_1.default(function (state) { return state.tags.allIds; });
    var tagsByIds = useTypedSelector_1.default(function (state) { return state.tags.byIds; });
    var allTagOptions = tagIds.reduce(function (acc, id) {
        var _a, _b;
        var tag = (_a = tagsByIds[id]) === null || _a === void 0 ? void 0 : _a.tag;
        if (tag) {
            acc.push({
                label: (_b = tag === null || tag === void 0 ? void 0 : tag.name) === null || _b === void 0 ? void 0 : _b.current,
                value: tag === null || tag === void 0 ? void 0 : tag._id
            });
        }
        return acc;
    }, []);
    var handleChange = function (option) {
        dispatch(assets_1.assetsSearchFacetsUpdate(__assign(__assign({}, facet), { value: option })));
    };
    var handleOperatorItemClick = function (operatorType) {
        dispatch(assets_1.assetsSearchFacetsUpdate(__assign(__assign({}, facet), { operatorType: operatorType })));
    };
    var selectedOperatorType = facet.operatorType;
    return (react_1.default.createElement(SearchFacet_1.default, { facet: facet },
        (facet === null || facet === void 0 ? void 0 : facet.operatorTypes) && (react_1.default.createElement(ui_1.MenuButton, { button: react_1.default.createElement(ui_1.Button, { fontSize: 1, iconRight: icons_1.SelectIcon, padding: 2, text: constants_1.SEARCH_FACET_OPERATORS[selectedOperatorType].label }), id: "operators", menu: react_1.default.createElement(ui_1.Menu, null, facet.operatorTypes.map(function (operatorType, index) {
                if (operatorType) {
                    return (react_1.default.createElement(ui_1.MenuItem, { disabled: operatorType === selectedOperatorType, fontSize: 1, key: operatorType, onClick: function () { return handleOperatorItemClick(operatorType); }, padding: 2, text: constants_1.SEARCH_FACET_OPERATORS[operatorType].label }));
                }
                return react_1.default.createElement(ui_1.MenuDivider, { key: index });
            })) })),
        !constants_1.SEARCH_FACET_OPERATORS[selectedOperatorType].hideInput && (react_1.default.createElement(ui_1.Box, { marginX: 1, style: { width: '140px' } },
            react_1.default.createElement(react_select_1.default, { components: single_1.reactSelectComponents, instanceId: "facet-searchable", isClearable: true, isSearchable: true, menuPortalTarget: document.body, name: "tags-x", noOptionsMessage: function () { return 'No tags'; }, onChange: function (value) { return handleChange(value); }, options: allTagOptions, placeholder: "Select...", styles: single_1.reactSelectStyles, value: facet === null || facet === void 0 ? void 0 : facet.value })))));
};
exports.default = SearchFacetSearchable;

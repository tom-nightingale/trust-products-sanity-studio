"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var color_1 = require("@sanity/color");
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var assets_1 = require("../../modules/assets");
var tags_1 = require("../../modules/tags");
var PanelHeader_1 = __importDefault(require("../PanelHeader"));
var TagPanel_1 = __importDefault(require("../TagPanel"));
var TagsPicked = function () {
    var assetsPicked = useTypedSelector_1.default(assets_1.selectAssetsPicked);
    var tags = useTypedSelector_1.default(tags_1.selectTags);
    var fetching = useTypedSelector_1.default(function (state) { return state.tags.fetching; });
    // TODO: refactor, there's most certainly a more performant way to do this
    // Filter out all tag IDS used (across all) and dedupe
    var pickedTagIds = assetsPicked === null || assetsPicked === void 0 ? void 0 : assetsPicked.reduce(function (acc, val) {
        var _a, _b, _c, _d;
        var assetTagIds = ((_d = (_c = (_b = (_a = val === null || val === void 0 ? void 0 : val.asset) === null || _a === void 0 ? void 0 : _a.opt) === null || _b === void 0 ? void 0 : _b.media) === null || _c === void 0 ? void 0 : _c.tags) === null || _d === void 0 ? void 0 : _d.map(function (tag) { return tag._ref; })) || [];
        acc = acc.concat(assetTagIds);
        return acc;
    }, []);
    var pickedTagIdsUnique = __spread(new Set(pickedTagIds));
    // Segment tags into two buckets:
    // 1. those which exist in all picked assets ('applied to all')
    // 2. those which exist in some picked assets ('applied to some')
    var tagIdsSegmented = pickedTagIdsUnique.reduce(function (acc, tagId) {
        var tagIsInEveryAsset = assetsPicked.every(function (assetItem) {
            var _a, _b, _c, _d;
            var tagIndex = (_d = (_c = (_b = (_a = assetItem.asset.opt) === null || _a === void 0 ? void 0 : _a.media) === null || _b === void 0 ? void 0 : _b.tags) === null || _c === void 0 ? void 0 : _c.findIndex(function (tag) { return tag._ref === tagId; })) !== null && _d !== void 0 ? _d : -1;
            if (tagIndex >= 0) {
                return true;
            }
        });
        if (tagIsInEveryAsset) {
            acc.appliedToAll.push(tagId);
        }
        else {
            acc.appliedToSome.push(tagId);
        }
        return acc;
    }, {
        appliedToAll: [],
        appliedToSome: []
    });
    var tagsAppliedToAll = tags.filter(function (tag) { return tagIdsSegmented.appliedToAll.includes(tag.tag._id); });
    var tagsAppliedToSome = tags.filter(function (tag) { return tagIdsSegmented.appliedToSome.includes(tag.tag._id); });
    var tagsUnused = tags.filter(function (tag) { return !pickedTagIdsUnique.includes(tag.tag._id); });
    return (react_1.default.createElement(ui_1.Box, null,
        react_1.default.createElement(PanelHeader_1.default, { allowCreate: true, light: true, title: "Tags (in selection)" }),
        !fetching && tags && tags.length === 0 && (react_1.default.createElement(ui_1.Box, { padding: 3 },
            react_1.default.createElement(ui_1.Text, { size: 1, style: { color: color_1.hues.gray[700].hex } },
                react_1.default.createElement("em", null, "No tags")))),
        (tagsAppliedToAll === null || tagsAppliedToAll === void 0 ? void 0 : tagsAppliedToAll.length) > 0 && (react_1.default.createElement(TagPanel_1.default, { actions: ['delete', 'edit', 'removeAll', 'search'], tags: tagsAppliedToAll, title: assetsPicked.length === 1 ? 'Used' : 'Used by all' })),
        (tagsAppliedToSome === null || tagsAppliedToSome === void 0 ? void 0 : tagsAppliedToSome.length) > 0 && (react_1.default.createElement(TagPanel_1.default, { actions: ['applyAll', 'delete', 'edit', 'removeAll', 'search'], tags: tagsAppliedToSome, title: "Used by some" })),
        (tagsUnused === null || tagsUnused === void 0 ? void 0 : tagsUnused.length) > 0 && (react_1.default.createElement(TagPanel_1.default, { actions: ['applyAll', 'edit', 'delete', 'search'], tags: tagsUnused, title: "Unused" }))));
};
exports.default = TagsPicked;
//# sourceMappingURL=index.js.map
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var ui_1 = require("@sanity/ui");
var react_1 = __importDefault(require("react"));
var react_redux_1 = require("react-redux");
var dialog_1 = require("../../modules/dialog");
var useTypedSelector_1 = __importDefault(require("../../hooks/useTypedSelector"));
var icons_1 = require("@sanity/icons");
var assets_1 = require("../../modules/assets");
var DialogDeleteConfirm = function (props) {
    var children = props.children, _a = props.dialog, assetId = _a.assetId, closeDialogId = _a.closeDialogId, id = _a.id;
    // Redux
    var dispatch = react_redux_1.useDispatch();
    var byIds = useTypedSelector_1.default(function (state) { return state.assets.byIds; });
    var items = Object.values(byIds);
    var item = byIds[assetId || ''];
    var asset = item === null || item === void 0 ? void 0 : item.asset;
    var picked = items === null || items === void 0 ? void 0 : items.filter(function (item) { return item === null || item === void 0 ? void 0 : item.picked; });
    // Callbacks
    var handleClose = function () {
        dispatch(dialog_1.dialogRemove(id));
    };
    var handleDelete = function () {
        // Close target dialog, if provided
        if (closeDialogId) {
            dispatch(dialog_1.dialogRemove(closeDialogId));
        }
        if (asset) {
            // Delete single asset
            dispatch(assets_1.assetsDelete(asset));
        }
        else {
            // Delete picked assets
            dispatch(assets_1.assetsDeletePicked());
        }
        // Close self
        handleClose();
    };
    var suffix = picked.length > 1 ? picked.length + " assets" : 'asset';
    var Footer = function () { return (react_1.default.createElement(ui_1.Box, { padding: 3 },
        react_1.default.createElement(ui_1.Flex, { justify: "space-between" },
            react_1.default.createElement(ui_1.Button, { fontSize: 1, mode: "bleed", onClick: handleClose, text: "Cancel" }),
            react_1.default.createElement(ui_1.Button, { fontSize: 1, onClick: handleDelete, text: "Yes, delete " + suffix, tone: "critical" })))); };
    var Header = function () { return (react_1.default.createElement(ui_1.Flex, { align: "center" },
        react_1.default.createElement(ui_1.Box, { paddingX: 1 },
            react_1.default.createElement(icons_1.WarningOutlineIcon, null)),
        react_1.default.createElement(ui_1.Box, { marginLeft: 2 }, "Confirm deletion"))); };
    return (react_1.default.createElement(ui_1.Dialog, { footer: react_1.default.createElement(Footer, null), header: react_1.default.createElement(Header, null), id: "deleteConfirm", onClose: handleClose, scheme: "dark", width: 1 },
        react_1.default.createElement(ui_1.Box, { paddingX: 4, paddingY: 4 },
            react_1.default.createElement(ui_1.Stack, { space: 3 },
                react_1.default.createElement(ui_1.Text, { size: 1 },
                    "Permanently delete ",
                    suffix,
                    "?"),
                react_1.default.createElement(ui_1.Text, { muted: true, size: 1 },
                    react_1.default.createElement("em", null, "This operation cannot be reversed. Are you sure you want to continue?")))),
        children));
};
exports.default = DialogDeleteConfirm;

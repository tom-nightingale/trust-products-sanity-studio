"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var isPlainObject = function (value) { return value !== null && typeof value === 'object'; };
var getAssetIds = function (node, acc) {
    if (acc === void 0) { acc = []; }
    Object.values(node).forEach(function (val) {
        var _a;
        if (['file', 'image'].includes(val === null || val === void 0 ? void 0 : val._type) && ((_a = val === null || val === void 0 ? void 0 : val.asset) === null || _a === void 0 ? void 0 : _a._type) === 'reference') {
            acc.push(val.asset._ref);
            return;
        }
        if (Array.isArray(val)) {
            val.forEach(function (v) {
                getAssetIds(v, acc);
            });
            return;
        }
        if (isPlainObject(val)) {
            getAssetIds(val, acc);
            return;
        }
    });
    return acc;
};
var getDocumentAssetIds = function (document) {
    var refs = getAssetIds(document);
    // Dedupe refs
    return __spread(new Set(refs));
};
exports.default = getDocumentAssetIds;
